package require tcltest
namespace import ::tcltest::*

tcl::tm::path add ~/.tbuild/repo/tm/tcl
tcl::tm::path add tm/tcl
lappend auto_path ~/local/lib

try {
	package require parsetcl
	namespace import ::parsetcl::*
} on error {errmsg options} {
	puts stderr "Error loading parsetcl: [dict get $options -errorinfo]"
	exit 1
}

package require rl_json
namespace import ::rl_json::*
package require rltest

test debug-1.1 {Ensure all the procs in the namespace parse (given all the brace quoting involved, this is iffy)} -body { #<<<
	expr {"expr2stack" in [lmap e [info commands ::parsetcl::*] {namespace tail $e}]}
} -result 1
#>>>
test parser-1.1 {hello, world} -body { #<<<
	set parse_tree	[parse_script "puts \"hello, world\"\nfoo"]
	#puts [json pretty $parse_tree]
	rltest compare_json $parse_tree { //<<<
		[
			"SCRIPT",
			[
				[
					[
						[
							"TEXT",
							"puts",
							null,
							0,
							{
								"line":      1,
								"char":      1,
								"toklength": 4
							}
						]
					],
					[
						[
							"SPACE",
							" ",
							null,
							4,
							{
								"line":      1,
								"char":      5,
								"toklength": 1
							}
						],
						[
							"SYNTAX",
							"\"",
							null,
							5,
							{
								"line":      1,
								"char":      6,
								"toklength": 1
							}
						],
						[
							"TEXT",
							"hello, world",
							null,
							6,
							{
								"line":      1,
								"char":      7,
								"toklength": 12
							}
						],
						[
							"SYNTAX",
							"\"",
							null,
							18,
							{
								"line":      1,
								"char":      19,
								"toklength": 1
							}
						],
						[
							[
								"END",
								"\n",
								null,
								19,
								{
									"line":      1,
									"char":      20,
									"toklength": 1
								}
							]
						]
					]
				],
				[
					[
						[
							"TEXT",
							"foo",
							null,
							20,
							{
								"line":      2,
								"char":      1,
								"toklength": 3
							}
						],
						[
							"END",
							null,
							null,
							23,
							{
								"line":      2,
								"char":      4,
								"toklength": 0
							}
						]
					]
				]
			],
			null,
			0,
			{
				"line":      1,
				"char":      1,
				"toklength": 22
			}
		]
	}
	#>>>
} -cleanup {
	unset -nocomplain parse_tree
} -result match
#>>>


::tcltest::cleanupTests

# vim: ft=tcl foldmethod=marker foldmarker=<<<,>>> shiftwidth=4 ts=4
